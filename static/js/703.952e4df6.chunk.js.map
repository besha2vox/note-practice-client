{"version":3,"file":"static/js/703.952e4df6.chunk.js","mappings":"mPAEaA,EAAQC,EAAAA,GAAAA,GAAH,4G,SCALC,EAAYD,EAAAA,GAAAA,GAAH,6FAMTE,EAAeF,EAAAA,GAAAA,GAAH,kF,6BCgDzB,EA/CiB,WACf,IAAMG,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAE1B,OAAI,OAACF,QAAD,IAACA,GAAAA,EAAOG,QAGV,SAACL,EAAD,UACGE,EAAMI,KACL,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,OAAQC,EAAlB,EAAkBA,KAAMC,EAAxB,EAAwBA,IAAKC,EAA7B,EAA6BA,MAAOC,EAApC,EAAoCA,OAAQC,EAA5C,EAA4CA,OAAQC,EAApD,EAAoDA,SAApD,OACE,SAACb,EAAD,WACE,SAACc,EAAA,EAAD,CACER,MAAOA,EACPC,OAAQA,EACRC,KAAMA,EACNC,IAAKA,EACLC,MAAOA,EACPC,OAAQA,EACRC,OAAQA,EACRC,SAAUA,KATKJ,EADrB,OALqB,SAAC,KAAD,sBAsB5B,ECXD,EAfkB,WAChB,IAAMM,GAAWC,EAAAA,EAAAA,MAMjB,OAJAC,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,MACV,GAAE,CAACH,KAGF,UAACI,EAAA,EAAD,YACE,SAACtB,EAAD,yBACA,SAAC,EAAD,MAGL,C","sources":["pages/PostsPage/PostsPage.styled.jsx","components/NoteList/NoteList.styled.jsx","components/NoteList/NoteList.jsx","pages/PostsPage/PostsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Title = styled.h1`\n    text-align: center;\n    margin-bottom: 12px;\n    text-decoration: underline;\n`;\n","import styled from 'styled-components';\n\nexport const NoteUList = styled.ul`\n    display: flex;\n    flex-direction: column;\n    row-gap: 12px;\n`;\n\nexport const NoteListItem = styled.li`\n    border: 1px solid #2e2e2e;\n    border-radius: 10px;\n`;\n","import PropType from 'prop-types';\nimport { useSelector } from 'react-redux';\n\nimport { selectAllNotes } from 'redux/notes/selectors';\n\nimport { NoteUList, NoteListItem } from './NoteList.styled';\nimport { NoComments } from 'components/ComentsList/ComentsList.styled';\nimport NoteItem from 'components/NoteItem/NoteItem';\n\nconst NoteList = () => {\n  const notes = useSelector(selectAllNotes);\n\n  if (!notes?.length) return <NoComments>No Posts</NoComments>;\n\n  return (\n    <NoteUList>\n      {notes.map(\n        ({ title, author, text, _id, likes, stared, avatar, comments }) => (\n          <NoteListItem key={_id}>\n            <NoteItem\n              title={title}\n              author={author}\n              text={text}\n              _id={_id}\n              likes={likes}\n              stared={stared}\n              avatar={avatar}\n              comments={comments}\n            />\n          </NoteListItem>\n        )\n      )}\n    </NoteUList>\n  );\n};\n\nNoteList.propTypes = {\n  notes: PropType.arrayOf(\n    PropType.shape({\n      title: PropType.string.isRequired,\n      author: PropType.string.isRequired,\n      text: PropType.string.isRequired,\n      _id: PropType.string.isRequired,\n      likes: PropType.number.isRequired,\n      stared: PropType.bool.isRequired,\n      comments: PropType.arrayOf(\n        PropType.shape({\n          _id: PropType.string.isRequired,\n          author: PropType.string.isRequired,\n          text: PropType.string.isRequired,\n        })\n      ),\n    })\n  ),\n};\n\nexport default NoteList;\n","import { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchNotes } from 'redux/notes/operations';\n\nimport { Container } from 'shared/Container';\nimport { Title } from './PostsPage.styled';\nimport NoteList from 'components/NoteList/NoteList';\n\nconst PostsPage = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchNotes());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Title>All posts</Title>\n      <NoteList />\n    </Container>\n  );\n};\n\nexport default PostsPage;\n"],"names":["Title","styled","NoteUList","NoteListItem","notes","useSelector","selectAllNotes","length","map","title","author","text","_id","likes","stared","avatar","comments","NoteItem","dispatch","useDispatch","useEffect","fetchNotes","Container"],"sourceRoot":""}