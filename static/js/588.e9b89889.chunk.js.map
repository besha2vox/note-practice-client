{"version":3,"file":"static/js/588.e9b89889.chunk.js","mappings":"mPAEaA,EAAiBC,EAAAA,GAAAA,IAAH,sG,sCCqB3B,EAlBgB,WACd,IAAMC,GAAOC,EAAAA,EAAAA,IAAYC,EAAAA,IACjBC,EAA8DH,EAA9DG,MAAOC,EAAuDJ,EAAvDI,OAAQC,EAA+CL,EAA/CK,KAAMC,EAAyCN,EAAzCM,IAAKC,EAAoCP,EAApCO,MAAOC,EAA6BR,EAA7BQ,OAAQC,EAAqBT,EAArBS,OAAQC,EAAaV,EAAbU,SAEzD,OACE,SAACC,EAAA,EAAD,CACER,MAAOA,EACPC,OAAQA,EACRC,KAAMA,EACNC,IAAKA,EACLC,MAAOA,EACPC,OAAQA,EACRC,OAAQA,EACRC,SAAUA,GAGf,E,oBCnBYE,EAAuBb,EAAAA,GAAAA,IAAH,kUAiBpBc,EAAcd,EAAAA,GAAAA,EAAH,6DCIxB,EAlBoB,SAAC,GAAkD,EAAhDO,IAAiD,IAA5CF,EAA2C,EAA3CA,OAAQC,EAAmC,EAAnCA,KAAmC,EAA7BI,OACxC,OACE,iCACE,UAACG,EAAD,YACE,gBAAKE,IAAKC,EAAeC,IAAI,YAC7B,uBAAIZ,QAEN,SAACS,EAAD,UAAcR,MAGnB,ECeD,EApBoB,WAClB,IAAMK,GAAWT,EAAAA,EAAAA,IAAYgB,EAAAA,IAE7B,OACE,iCACE,wCACC,OAACP,QAAD,IAACA,GAAAA,EAAUQ,UAAU,SAAC,KAAD,4BACpB,OAACR,QAAD,IAACA,IAAAA,EAAUQ,UACX,SAAC,KAAD,UACGR,EAASS,KAAI,gBAAGb,EAAH,EAAGA,IAAKF,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,KAAhB,OACZ,SAAC,KAAD,WACE,SAAC,EAAD,CAAaD,OAAQA,EAAQC,KAAMA,KADdC,EADX,QASvB,ECCD,EAlBoB,WAClB,IAAMc,GAAWC,EAAAA,EAAAA,MACTC,GAAWC,EAAAA,EAAAA,MAAXD,OAMR,OAJAE,EAAAA,EAAAA,YAAU,WACRJ,GAASK,EAAAA,EAAAA,IAAcH,GACxB,GAAE,CAACF,EAAUE,KAGZ,UAACI,EAAA,EAAD,YACE,SAAC5B,EAAD,WACE,SAAC,EAAD,OAEF,SAAC,EAAD,MAGL,C","sources":["pages/OnePostPage/OnePostPage.styled.jsx","components/OneNote/OneNote.jsx","components/CommentItem/CommentItem.styled.jsx","components/CommentItem/CommentItem.jsx","components/ComentsList/ComentsList.jsx","pages/OnePostPage/OnePostPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const OnePostWrapper = styled.div`\n  border: 1px solid #2e2e2e;\n  border-radius: 10px;\n  margin-bottom: 12px;\n`;\n","import { useSelector } from 'react-redux';\n\nimport { selectCurrentNotes } from 'redux/notes/selectors';\nimport NoteItem from 'components/NoteItem/NoteItem';\n\nconst OneNote = () => {\n  const note = useSelector(selectCurrentNotes);\n  const { title, author, text, _id, likes, stared, avatar, comments } = note;\n\n  return (\n    <NoteItem\n      title={title}\n      author={author}\n      text={text}\n      _id={_id}\n      likes={likes}\n      stared={stared}\n      avatar={avatar}\n      comments={comments}\n    />\n  );\n};\n\nexport default OneNote;\n","import styled from 'styled-components';\n\nexport const CommentAuthorWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 4px 8px;\n  column-gap: 12px;\n  border-bottom: 1px solid #2e2e2e;\n  border-right: 1px solid #2e2e2e;\n  border-bottom-right-radius: 10px;\n  font-size: 16px;\n  width: fit-content;\n\n  & img {\n    border-radius: 50%;\n    width: 30px;\n  }\n`;\n\nexport const CommentText = styled.p`\n  padding: 8px;\n  font-size: 20px;\n`;\n","import PropType from 'prop-types';\n\nimport defaultAvatar from 'images/default-avatar.png';\nimport { CommentAuthorWrapper, CommentText } from './CommentItem.styled';\n\nconst CommentItem = ({ _id, author, text, avatar = defaultAvatar }) => {\n  return (\n    <>\n      <CommentAuthorWrapper>\n        <img src={defaultAvatar} alt=\"avatar\" />\n        <p>{author}</p>\n      </CommentAuthorWrapper>\n      <CommentText>{text}</CommentText>\n    </>\n  );\n};\n\nCommentItem.propTypes = {\n  _id: PropType.string,\n  author: PropType.string.isRequired,\n  text: PropType.string.isRequired,\n};\n\nexport default CommentItem;\n","import { useSelector } from 'react-redux';\n\nimport { selectComments } from 'redux/notes/selectors';\nimport {\n  CommentsList,\n  CommentsListItem,\n  NoComments,\n} from './ComentsList.styled';\nimport CommentItem from 'components/CommentItem/CommentItem';\n\nconst ComentsList = () => {\n  const comments = useSelector(selectComments);\n\n  return (\n    <>\n      <h4>Comments:</h4>\n      {!comments?.length && <NoComments>No comments</NoComments>}\n      {!!comments?.length && (\n        <CommentsList>\n          {comments.map(({ _id, author, text }) => (\n            <CommentsListItem key={_id}>\n              <CommentItem author={author} text={text} />\n            </CommentsListItem>\n          ))}\n        </CommentsList>\n      )}\n    </>\n  );\n};\n\nexport default ComentsList;\n","import { useParams } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport { fetchNoteById } from 'redux/notes/operations';\n\nimport { OnePostWrapper } from './OnePostPage.styled';\nimport { Container } from 'shared/Container';\nimport OneNote from 'components/OneNote/OneNote';\nimport ComentsList from 'components/ComentsList/ComentsList';\n\nconst OnePostPage = () => {\n  const dispatch = useDispatch();\n  const { postId } = useParams();\n\n  useEffect(() => {\n    dispatch(fetchNoteById(postId));\n  }, [dispatch, postId]);\n\n  return (\n    <Container>\n      <OnePostWrapper>\n        <OneNote />\n      </OnePostWrapper>\n      <ComentsList />\n    </Container>\n  );\n};\n\nexport default OnePostPage;\n"],"names":["OnePostWrapper","styled","note","useSelector","selectCurrentNotes","title","author","text","_id","likes","stared","avatar","comments","NoteItem","CommentAuthorWrapper","CommentText","src","defaultAvatar","alt","selectComments","length","map","dispatch","useDispatch","postId","useParams","useEffect","fetchNoteById","Container"],"sourceRoot":""}